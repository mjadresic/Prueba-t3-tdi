"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/etl";
exports.ids = ["pages/api/etl"];
exports.modules = {

/***/ "@google-cloud/storage":
/*!****************************************!*\
  !*** external "@google-cloud/storage" ***!
  \****************************************/
/***/ ((module) => {

module.exports = require("@google-cloud/storage");

/***/ }),

/***/ "csv-parse/sync":
/*!*********************************!*\
  !*** external "csv-parse/sync" ***!
  \*********************************/
/***/ ((module) => {

module.exports = import("csv-parse/sync");;

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "(api)/./config.js":
/*!*******************!*\
  !*** ./config.js ***!
  \*******************/
/***/ ((module) => {

eval("\nmodule.exports = {\n    BUCKET_NAME: '2024-1-tarea-3',\n    GOOGLE_APPLICATION_CREDENTIALS: './taller-integracion-310700-41f361102b8b.json'\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9jb25maWcuanMuanMiLCJtYXBwaW5ncyI6IjtBQUFBQSxNQUFNLENBQUNDLE9BQU8sR0FBRyxDQUFDO0lBQ2hCQyxXQUFXLEVBQUUsQ0FBZ0I7SUFDN0JDLDhCQUE4QixFQUFFLENBQStDO0FBQ2pGLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS1kYXNoYm9hcmQvLi9jb25maWcuanM/YzJiMyJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHtcclxuICBCVUNLRVRfTkFNRTogJzIwMjQtMS10YXJlYS0zJyxcclxuICBHT09HTEVfQVBQTElDQVRJT05fQ1JFREVOVElBTFM6ICcuL3RhbGxlci1pbnRlZ3JhY2lvbi0zMTA3MDAtNDFmMzYxMTAyYjhiLmpzb24nLFxyXG59O1xyXG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIkJVQ0tFVF9OQU1FIiwiR09PR0xFX0FQUExJQ0FUSU9OX0NSRURFTlRJQUxTIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./config.js\n");

/***/ }),

/***/ "(api)/./pages/api/etl.js":
/*!**************************!*\
  !*** ./pages/api/etl.js ***!
  \**************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _google_cloud_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @google-cloud/storage */ \"@google-cloud/storage\");\n/* harmony import */ var _google_cloud_storage__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_google_cloud_storage__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var csv_parse_sync__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! csv-parse/sync */ \"csv-parse/sync\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../config */ \"(api)/./config.js\");\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_config__WEBPACK_IMPORTED_MODULE_4__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([csv_parse_sync__WEBPACK_IMPORTED_MODULE_1__]);\ncsv_parse_sync__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\nasync function handler(req, res) {\n    console.log('Starting ETL and data compilation process');\n    // Path absoluto al archivo de credenciales\n    const credentialsPath = path__WEBPACK_IMPORTED_MODULE_3___default().join(process.cwd(), 'taller-integracion-310700-41f361102b8b.json');\n    const storage = new _google_cloud_storage__WEBPACK_IMPORTED_MODULE_0__.Storage({\n        keyFilename: credentialsPath\n    });\n    const bucket = storage.bucket((_config__WEBPACK_IMPORTED_MODULE_4___default().BUCKET_NAME));\n    const products = [];\n    const ordersByYear = {};\n    try {\n        console.log('Attempting to retrieve files from bucket');\n        const [files] = await bucket.getFiles();\n        console.log('Files retrieved from bucket:', files.map((file)=>file.name\n        ));\n        console.log(\"Downloading...\");\n        for (const file1 of files){\n            const [data] = await file1.download();\n            if (file1.name.includes('products')) {\n                const productData = JSON.parse(data.toString());\n                products.push(...productData);\n                console.log(`File ${file1.name} downloaded`);\n            } else if (file1.name.includes('orders')) {\n                const yearMatch = file1.name.match(/orders\\/(\\d{4})\\//);\n                if (yearMatch) {\n                    const year = yearMatch[1];\n                    if (!ordersByYear[year]) {\n                        ordersByYear[year] = [];\n                    }\n                    try {\n                        const parsedData = (0,csv_parse_sync__WEBPACK_IMPORTED_MODULE_1__.parse)(data.toString(), {\n                            columns: true,\n                            skip_empty_lines: true,\n                            delimiter: ';'\n                        });\n                        ordersByYear[year].push(...parsedData.map((record, index)=>{\n                            return {\n                                order_id: record.order_id || `missing_order_id_${index + 1}`,\n                                customer_id: record.customer_id || `missing_customer_id_${index + 1}`,\n                                quantity: record.quantity ? parseInt(record.quantity.replace(',', '.'), 10) : 1,\n                                price_MRP: record.price_MRP ? parseFloat(record.price_MRP.replace(',', '.')) : 0,\n                                payment: record.payment ? parseFloat(record.payment.replace(',', '.')) : 0,\n                                timestamp: record.timestamp || '1970-01-01 00:00:00',\n                                rating: record.rating ? parseInt(record.rating, 10) : 0,\n                                product_category: record.product_category || 'unknown',\n                                product_id: record.product_id || 'NULL',\n                                payment_type: record.payment_type || 'unknown',\n                                order_status: record.order_status || 'unknown',\n                                product_weight_g: record.product_weight_g ? parseFloat(record.product_weight_g.replace(',', '.')) : 0,\n                                product_length_cm: record.product_length_cm ? parseFloat(record.product_length_cm.replace(',', '.')) : 0,\n                                product_height_cm: record.product_height_cm ? parseFloat(record.product_height_cm.replace(',', '.')) : 0,\n                                product_width_cm: record.product_width_cm ? parseFloat(record.product_width_cm.replace(',', '.')) : 0,\n                                customer_city: record.customer_city || 'unknown',\n                                customer_state: record.customer_state || 'unknown',\n                                seller_id: record.seller_id || `missing_seller_id_${index + 1}`,\n                                seller_city: record.seller_city || 'unknown',\n                                seller_state: record.seller_state || 'unknown',\n                                payment_installments: record.payment_installments ? parseInt(record.payment_installments, 10) : 1\n                            };\n                        }));\n                    } catch (parseError) {\n                        console.error(`Error parsing file ${file1.name}:`, parseError);\n                        return res.status(500).json({\n                            error: `Error parsing file ${file1.name}: ${parseError.message}`\n                        });\n                    }\n                }\n            }\n        }\n        console.log('Data parsed successfully');\n        // Concatenate all orders from different years into a single array\n        const allOrders = Object.values(ordersByYear).flat();\n        // Remove duplicate products\n        const productSet = new Set();\n        const cleanProducts = products.filter((product)=>{\n            if (productSet.has(product.objectID)) {\n                return false; // Skip duplicate\n            } else {\n                productSet.add(product.objectID);\n                return true; // Keep unique\n            }\n        }).map((product)=>{\n            var ref, ref1, ref2, ref3;\n            return {\n                objectID: product.objectID || 'Unknown',\n                name: product.name || 'Unknown',\n                description: product.description || 'No description available',\n                brand: product.brand || 'Unknown brand',\n                categories: product.categories || [],\n                hierarchicalCategories: {\n                    lvl0: ((ref = product.hierarchicalCategories) === null || ref === void 0 ? void 0 : ref.lvl0) || 'Unknown',\n                    lvl1: ((ref1 = product.hierarchicalCategories) === null || ref1 === void 0 ? void 0 : ref1.lvl1) || 'Unknown',\n                    lvl2: ((ref2 = product.hierarchicalCategories) === null || ref2 === void 0 ? void 0 : ref2.lvl2) || 'Unknown',\n                    lvl3: ((ref3 = product.hierarchicalCategories) === null || ref3 === void 0 ? void 0 : ref3.lvl3) || 'Unknown'\n                },\n                type: product.type || 'Unknown type',\n                price: product.price || 0,\n                price_range: product.price_range || 'Unknown',\n                image: product.image || 'No image available',\n                url: product.url || 'No URL available',\n                free_shipping: product.free_shipping !== undefined ? product.free_shipping : false,\n                popularity: product.popularity || 0,\n                rating: product.rating || 0\n            };\n        });\n        // Remove duplicate orders\n        const orderSet = new Set();\n        const cleanOrders = allOrders.filter((order)=>{\n            if (orderSet.has(order.order_id)) {\n                return false; // Skip duplicate\n            } else {\n                orderSet.add(order.order_id);\n                return true; // Keep unique\n            }\n        }).map((order)=>({\n                ...order,\n                quantity: order.quantity || 1,\n                price_MRP: order.price_MRP || 0,\n                payment: order.payment || 0,\n                rating: order.rating || 0\n            })\n        );\n        console.log('Writing cleaned data to files');\n        fs__WEBPACK_IMPORTED_MODULE_2___default().writeFileSync(path__WEBPACK_IMPORTED_MODULE_3___default().join(process.cwd(), 'public', 'products.json'), JSON.stringify(cleanProducts));\n        fs__WEBPACK_IMPORTED_MODULE_2___default().writeFileSync(path__WEBPACK_IMPORTED_MODULE_3___default().join(process.cwd(), 'public', 'orders.json'), JSON.stringify(cleanOrders));\n        console.log('Files written successfully');\n        // Log a summary of orders grouped by year\n        for (const year of Object.keys(ordersByYear)){\n            console.log(`File orders/${year}/* downloaded`);\n        }\n        res.status(200).json({\n            message: 'ETL and data compilation process completed successfully'\n        });\n    } catch (error) {\n        console.error('Error during ETL and data compilation process:', error);\n        res.status(500).json({\n            error: error.message\n        });\n    }\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/etl.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/etl.js"));
module.exports = __webpack_exports__;

})();