"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/etl";
exports.ids = ["pages/api/etl"];
exports.modules = {

/***/ "@google-cloud/storage":
/*!****************************************!*\
  !*** external "@google-cloud/storage" ***!
  \****************************************/
/***/ ((module) => {

module.exports = require("@google-cloud/storage");

/***/ }),

/***/ "csv-parse/sync":
/*!*********************************!*\
  !*** external "csv-parse/sync" ***!
  \*********************************/
/***/ ((module) => {

module.exports = import("csv-parse/sync");;

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "(api)/./config.js":
/*!*******************!*\
  !*** ./config.js ***!
  \*******************/
/***/ ((module) => {

eval("\nmodule.exports = {\n    BUCKET_NAME: '2024-1-tarea-3',\n    GOOGLE_APPLICATION_CREDENTIALS: './taller-integracion-310700-41f361102b8b.json'\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9jb25maWcuanMuanMiLCJtYXBwaW5ncyI6IjtBQUFBQSxNQUFNLENBQUNDLE9BQU8sR0FBRyxDQUFDO0lBQ2RDLFdBQVcsRUFBRSxDQUFnQjtJQUM3QkMsOEJBQThCLEVBQUUsQ0FBK0M7QUFDakYsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL215LWRhc2hib2FyZC8uL2NvbmZpZy5qcz9jMmIzIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0ge1xyXG4gICAgQlVDS0VUX05BTUU6ICcyMDI0LTEtdGFyZWEtMycsXHJcbiAgICBHT09HTEVfQVBQTElDQVRJT05fQ1JFREVOVElBTFM6ICcuL3RhbGxlci1pbnRlZ3JhY2lvbi0zMTA3MDAtNDFmMzYxMTAyYjhiLmpzb24nLFxyXG4gIH07XHJcbiAgIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJCVUNLRVRfTkFNRSIsIkdPT0dMRV9BUFBMSUNBVElPTl9DUkVERU5USUFMUyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./config.js\n");

/***/ }),

/***/ "(api)/./pages/api/etl.js":
/*!**************************!*\
  !*** ./pages/api/etl.js ***!
  \**************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _google_cloud_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @google-cloud/storage */ \"@google-cloud/storage\");\n/* harmony import */ var _google_cloud_storage__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_google_cloud_storage__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var csv_parse_sync__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! csv-parse/sync */ \"csv-parse/sync\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../config */ \"(api)/./config.js\");\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_config__WEBPACK_IMPORTED_MODULE_4__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([csv_parse_sync__WEBPACK_IMPORTED_MODULE_1__]);\ncsv_parse_sync__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\nasync function handler(req, res) {\n    console.log('Starting ETL and data compilation process');\n    const storage = new _google_cloud_storage__WEBPACK_IMPORTED_MODULE_0__.Storage({\n        keyFilename: (_config__WEBPACK_IMPORTED_MODULE_4___default().GOOGLE_APPLICATION_CREDENTIALS)\n    });\n    const bucket = storage.bucket((_config__WEBPACK_IMPORTED_MODULE_4___default().BUCKET_NAME));\n    const products = [];\n    const ordersByYear = {};\n    try {\n        console.log('Attempting to retrieve files from bucket');\n        const [files] = await bucket.getFiles();\n        console.log('Files retrieved from bucket:', files.map((file)=>file.name\n        ));\n        console.log(\"Downloading...\");\n        for (const file1 of files){\n            const [data] = await file1.download();\n            if (file1.name.includes('products')) {\n                const productData = JSON.parse(data.toString());\n                products.push(...productData);\n                console.log(`File ${file1.name} downloaded`);\n            } else if (file1.name.includes('orders')) {\n                const yearMatch = file1.name.match(/orders\\/(\\d{4})\\//);\n                if (yearMatch) {\n                    const year = yearMatch[1];\n                    if (!ordersByYear[year]) {\n                        ordersByYear[year] = [];\n                    }\n                    try {\n                        const parsedData = (0,csv_parse_sync__WEBPACK_IMPORTED_MODULE_1__.parse)(data.toString(), {\n                            columns: true,\n                            skip_empty_lines: true,\n                            delimiter: ';'\n                        });\n                        ordersByYear[year].push(...parsedData.map((record, index)=>{\n                            return {\n                                order_id: record.order_id || `missing_order_id_${index + 1}`,\n                                customer_id: record.customer_id || `missing_customer_id_${index + 1}`,\n                                quantity: record.quantity ? parseInt(record.quantity.replace(',', '.'), 10) : 1,\n                                price_MRP: record.price_MRP ? parseFloat(record.price_MRP.replace(',', '.')) : 0,\n                                payment: record.payment ? parseFloat(record.payment.replace(',', '.')) : 0,\n                                timestamp: record.timestamp || '1970-01-01 00:00:00',\n                                rating: record.rating ? parseInt(record.rating, 10) : 0,\n                                product_category: record.product_category || 'unknown',\n                                product_id: record.product_id || 'NULL',\n                                payment_type: record.payment_type || 'unknown',\n                                order_status: record.order_status || 'unknown',\n                                product_weight_g: record.product_weight_g ? parseFloat(record.product_weight_g.replace(',', '.')) : 0,\n                                product_length_cm: record.product_length_cm ? parseFloat(record.product_length_cm.replace(',', '.')) : 0,\n                                product_height_cm: record.product_height_cm ? parseFloat(record.product_height_cm.replace(',', '.')) : 0,\n                                product_width_cm: record.product_width_cm ? parseFloat(record.product_width_cm.replace(',', '.')) : 0,\n                                customer_city: record.customer_city || 'unknown',\n                                customer_state: record.customer_state || 'unknown',\n                                seller_id: record.seller_id || `missing_seller_id_${index + 1}`,\n                                seller_city: record.seller_city || 'unknown',\n                                seller_state: record.seller_state || 'unknown',\n                                payment_installments: record.payment_installments ? parseInt(record.payment_installments, 10) : 1\n                            };\n                        }));\n                    } catch (parseError) {\n                        console.error(`Error parsing file ${file1.name}:`, parseError);\n                    }\n                }\n            }\n        }\n        console.log('Data parsed successfully');\n        // Concatenate all orders from different years into a single array\n        const allOrders = Object.values(ordersByYear).flat();\n        // Remove duplicate products\n        const productSet = new Set();\n        const cleanProducts = products.filter((product)=>{\n            if (productSet.has(product.objectID)) {\n                return false; // Skip duplicate\n            } else {\n                productSet.add(product.objectID);\n                return true; // Keep unique\n            }\n        }).map((product)=>{\n            var ref, ref1, ref2, ref3;\n            return {\n                objectID: product.objectID || 'Unknown',\n                name: product.name || 'Unknown',\n                description: product.description || 'No description available',\n                brand: product.brand || 'Unknown brand',\n                categories: product.categories || [],\n                hierarchicalCategories: {\n                    lvl0: ((ref = product.hierarchicalCategories) === null || ref === void 0 ? void 0 : ref.lvl0) || 'Unknown',\n                    lvl1: ((ref1 = product.hierarchicalCategories) === null || ref1 === void 0 ? void 0 : ref1.lvl1) || 'Unknown',\n                    lvl2: ((ref2 = product.hierarchicalCategories) === null || ref2 === void 0 ? void 0 : ref2.lvl2) || 'Unknown',\n                    lvl3: ((ref3 = product.hierarchicalCategories) === null || ref3 === void 0 ? void 0 : ref3.lvl3) || 'Unknown'\n                },\n                type: product.type || 'Unknown type',\n                price: product.price || 0,\n                price_range: product.price_range || 'Unknown',\n                image: product.image || 'No image available',\n                url: product.url || 'No URL available',\n                free_shipping: product.free_shipping !== undefined ? product.free_shipping : false,\n                popularity: product.popularity || 0,\n                rating: product.rating || 0\n            };\n        });\n        // Remove duplicate orders\n        const orderSet = new Set();\n        const cleanOrders = allOrders.filter((order)=>{\n            if (orderSet.has(order.order_id)) {\n                return false; // Skip duplicate\n            } else {\n                orderSet.add(order.order_id);\n                return true; // Keep unique\n            }\n        }).map((order)=>({\n                ...order,\n                quantity: order.quantity || 1,\n                price_MRP: order.price_MRP || 0,\n                payment: order.payment || 0,\n                rating: order.rating || 0\n            })\n        );\n        console.log('Writing cleaned data to files');\n        fs__WEBPACK_IMPORTED_MODULE_2___default().writeFileSync(path__WEBPACK_IMPORTED_MODULE_3___default().join(process.cwd(), 'public', 'local-data', 'products.json'), JSON.stringify(cleanProducts));\n        fs__WEBPACK_IMPORTED_MODULE_2___default().writeFileSync(path__WEBPACK_IMPORTED_MODULE_3___default().join(process.cwd(), 'public', 'local-data', 'orders.json'), JSON.stringify(cleanOrders));\n        console.log('Files written successfully');\n        // Log a summary of orders grouped by year\n        for (const year of Object.keys(ordersByYear)){\n            console.log(`File orders/${year}/* downloaded`);\n        }\n        res.status(200).json({\n            message: 'ETL and data compilation process completed successfully'\n        });\n    } catch (error) {\n        console.error('Error during ETL and data compilation process:', error);\n        res.status(500).json({\n            error: error.message\n        });\n    }\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LENBQUM7WUFBQ0MsT0FBTyxFQUFFLENBQXlEO1FBQUMsQ0FBQztJQUM3RixDQUFDLENBQUMsS0FBSyxFQUFFeEMsS0FBSyxFQUFFLENBQUM7UUFDZnZELE9BQU8sQ0FBQ3VELEtBQUssQ0FBQyxDQUFnRCxpREFBRUEsS0FBSztRQUNyRXhELEdBQUcsQ0FBQzhGLE1BQU0sQ0FBQyxHQUFHLEVBQUVDLElBQUksQ0FBQyxDQUFDO1lBQUN2QyxLQUFLLEVBQUVBLEtBQUssQ0FBQ3dDLE9BQU87UUFBQyxDQUFDO0lBQy9DLENBQUM7QUFDSCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktZGFzaGJvYXJkLy4vcGFnZXMvYXBpL2V0bC5qcz9hMmNhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFN0b3JhZ2UgfSBmcm9tICdAZ29vZ2xlLWNsb3VkL3N0b3JhZ2UnO1xyXG5pbXBvcnQgeyBwYXJzZSB9IGZyb20gJ2Nzdi1wYXJzZS9zeW5jJztcclxuaW1wb3J0IGZzIGZyb20gJ2ZzJztcclxuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XHJcbmltcG9ydCBjb25maWcgZnJvbSAnLi4vLi4vY29uZmlnJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIGhhbmRsZXIocmVxLCByZXMpIHtcclxuICBjb25zb2xlLmxvZygnU3RhcnRpbmcgRVRMIGFuZCBkYXRhIGNvbXBpbGF0aW9uIHByb2Nlc3MnKTtcclxuICBcclxuICBjb25zdCBzdG9yYWdlID0gbmV3IFN0b3JhZ2Uoe1xyXG4gICAga2V5RmlsZW5hbWU6IGNvbmZpZy5HT09HTEVfQVBQTElDQVRJT05fQ1JFREVOVElBTFMsXHJcbiAgfSk7XHJcblxyXG4gIGNvbnN0IGJ1Y2tldCA9IHN0b3JhZ2UuYnVja2V0KGNvbmZpZy5CVUNLRVRfTkFNRSk7XHJcblxyXG4gIGNvbnN0IHByb2R1Y3RzID0gW107XHJcbiAgY29uc3Qgb3JkZXJzQnlZZWFyID0ge307XHJcblxyXG4gIHRyeSB7XHJcbiAgICBjb25zb2xlLmxvZygnQXR0ZW1wdGluZyB0byByZXRyaWV2ZSBmaWxlcyBmcm9tIGJ1Y2tldCcpO1xyXG4gICAgY29uc3QgW2ZpbGVzXSA9IGF3YWl0IGJ1Y2tldC5nZXRGaWxlcygpO1xyXG4gICAgY29uc29sZS5sb2coJ0ZpbGVzIHJldHJpZXZlZCBmcm9tIGJ1Y2tldDonLCBmaWxlcy5tYXAoZmlsZSA9PiBmaWxlLm5hbWUpKTtcclxuICAgIGNvbnNvbGUubG9nKFwiRG93bmxvYWRpbmcuLi5cIik7XHJcblxyXG4gICAgZm9yIChjb25zdCBmaWxlIG9mIGZpbGVzKSB7XHJcbiAgICAgIGNvbnN0IFtkYXRhXSA9IGF3YWl0IGZpbGUuZG93bmxvYWQoKTtcclxuICAgICAgXHJcbiAgICAgIGlmIChmaWxlLm5hbWUuaW5jbHVkZXMoJ3Byb2R1Y3RzJykpIHtcclxuICAgICAgICBjb25zdCBwcm9kdWN0RGF0YSA9IEpTT04ucGFyc2UoZGF0YS50b1N0cmluZygpKTtcclxuICAgICAgICBwcm9kdWN0cy5wdXNoKC4uLnByb2R1Y3REYXRhKTtcclxuICAgICAgICBjb25zb2xlLmxvZyhgRmlsZSAke2ZpbGUubmFtZX0gZG93bmxvYWRlZGApO1xyXG4gICAgICB9IGVsc2UgaWYgKGZpbGUubmFtZS5pbmNsdWRlcygnb3JkZXJzJykpIHtcclxuICAgICAgICBjb25zdCB5ZWFyTWF0Y2ggPSBmaWxlLm5hbWUubWF0Y2goL29yZGVyc1xcLyhcXGR7NH0pXFwvLyk7XHJcbiAgICAgICAgaWYgKHllYXJNYXRjaCkge1xyXG4gICAgICAgICAgY29uc3QgeWVhciA9IHllYXJNYXRjaFsxXTtcclxuICAgICAgICAgIGlmICghb3JkZXJzQnlZZWFyW3llYXJdKSB7XHJcbiAgICAgICAgICAgIG9yZGVyc0J5WWVhclt5ZWFyXSA9IFtdO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgY29uc3QgcGFyc2VkRGF0YSA9IHBhcnNlKGRhdGEudG9TdHJpbmcoKSwge1xyXG4gICAgICAgICAgICAgIGNvbHVtbnM6IHRydWUsXHJcbiAgICAgICAgICAgICAgc2tpcF9lbXB0eV9saW5lczogdHJ1ZSxcclxuICAgICAgICAgICAgICBkZWxpbWl0ZXI6ICc7JyxcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICBvcmRlcnNCeVllYXJbeWVhcl0ucHVzaCguLi5wYXJzZWREYXRhLm1hcCgocmVjb3JkLCBpbmRleCkgPT4ge1xyXG4gICAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICBvcmRlcl9pZDogcmVjb3JkLm9yZGVyX2lkIHx8IGBtaXNzaW5nX29yZGVyX2lkXyR7aW5kZXggKyAxfWAsXHJcbiAgICAgICAgICAgICAgICBjdXN0b21lcl9pZDogcmVjb3JkLmN1c3RvbWVyX2lkIHx8IGBtaXNzaW5nX2N1c3RvbWVyX2lkXyR7aW5kZXggKyAxfWAsXHJcbiAgICAgICAgICAgICAgICBxdWFudGl0eTogcmVjb3JkLnF1YW50aXR5ID8gcGFyc2VJbnQocmVjb3JkLnF1YW50aXR5LnJlcGxhY2UoJywnLCAnLicpLCAxMCkgOiAxLFxyXG4gICAgICAgICAgICAgICAgcHJpY2VfTVJQOiByZWNvcmQucHJpY2VfTVJQID8gcGFyc2VGbG9hdChyZWNvcmQucHJpY2VfTVJQLnJlcGxhY2UoJywnLCAnLicpKSA6IDAsXHJcbiAgICAgICAgICAgICAgICBwYXltZW50OiByZWNvcmQucGF5bWVudCA/IHBhcnNlRmxvYXQocmVjb3JkLnBheW1lbnQucmVwbGFjZSgnLCcsICcuJykpIDogMCxcclxuICAgICAgICAgICAgICAgIHRpbWVzdGFtcDogcmVjb3JkLnRpbWVzdGFtcCB8fCAnMTk3MC0wMS0wMSAwMDowMDowMCcsXHJcbiAgICAgICAgICAgICAgICByYXRpbmc6IHJlY29yZC5yYXRpbmcgPyBwYXJzZUludChyZWNvcmQucmF0aW5nLCAxMCkgOiAwLFxyXG4gICAgICAgICAgICAgICAgcHJvZHVjdF9jYXRlZ29yeTogcmVjb3JkLnByb2R1Y3RfY2F0ZWdvcnkgfHwgJ3Vua25vd24nLFxyXG4gICAgICAgICAgICAgICAgcHJvZHVjdF9pZDogcmVjb3JkLnByb2R1Y3RfaWQgfHwgJ05VTEwnLFxyXG4gICAgICAgICAgICAgICAgcGF5bWVudF90eXBlOiByZWNvcmQucGF5bWVudF90eXBlIHx8ICd1bmtub3duJyxcclxuICAgICAgICAgICAgICAgIG9yZGVyX3N0YXR1czogcmVjb3JkLm9yZGVyX3N0YXR1cyB8fCAndW5rbm93bicsXHJcbiAgICAgICAgICAgICAgICBwcm9kdWN0X3dlaWdodF9nOiByZWNvcmQucHJvZHVjdF93ZWlnaHRfZyA/IHBhcnNlRmxvYXQocmVjb3JkLnByb2R1Y3Rfd2VpZ2h0X2cucmVwbGFjZSgnLCcsICcuJykpIDogMCxcclxuICAgICAgICAgICAgICAgIHByb2R1Y3RfbGVuZ3RoX2NtOiByZWNvcmQucHJvZHVjdF9sZW5ndGhfY20gPyBwYXJzZUZsb2F0KHJlY29yZC5wcm9kdWN0X2xlbmd0aF9jbS5yZXBsYWNlKCcsJywgJy4nKSkgOiAwLFxyXG4gICAgICAgICAgICAgICAgcHJvZHVjdF9oZWlnaHRfY206IHJlY29yZC5wcm9kdWN0X2hlaWdodF9jbSA/IHBhcnNlRmxvYXQocmVjb3JkLnByb2R1Y3RfaGVpZ2h0X2NtLnJlcGxhY2UoJywnLCAnLicpKSA6IDAsXHJcbiAgICAgICAgICAgICAgICBwcm9kdWN0X3dpZHRoX2NtOiByZWNvcmQucHJvZHVjdF93aWR0aF9jbSA/IHBhcnNlRmxvYXQocmVjb3JkLnByb2R1Y3Rfd2lkdGhfY20ucmVwbGFjZSgnLCcsICcuJykpIDogMCxcclxuICAgICAgICAgICAgICAgIGN1c3RvbWVyX2NpdHk6IHJlY29yZC5jdXN0b21lcl9jaXR5IHx8ICd1bmtub3duJyxcclxuICAgICAgICAgICAgICAgIGN1c3RvbWVyX3N0YXRlOiByZWNvcmQuY3VzdG9tZXJfc3RhdGUgfHwgJ3Vua25vd24nLFxyXG4gICAgICAgICAgICAgICAgc2VsbGVyX2lkOiByZWNvcmQuc2VsbGVyX2lkIHx8IGBtaXNzaW5nX3NlbGxlcl9pZF8ke2luZGV4ICsgMX1gLFxyXG4gICAgICAgICAgICAgICAgc2VsbGVyX2NpdHk6IHJlY29yZC5zZWxsZXJfY2l0eSB8fCAndW5rbm93bicsXHJcbiAgICAgICAgICAgICAgICBzZWxsZXJfc3RhdGU6IHJlY29yZC5zZWxsZXJfc3RhdGUgfHwgJ3Vua25vd24nLFxyXG4gICAgICAgICAgICAgICAgcGF5bWVudF9pbnN0YWxsbWVudHM6IHJlY29yZC5wYXltZW50X2luc3RhbGxtZW50cyA/IHBhcnNlSW50KHJlY29yZC5wYXltZW50X2luc3RhbGxtZW50cywgMTApIDogMSxcclxuICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICB9KSk7XHJcbiAgICAgICAgICB9IGNhdGNoIChwYXJzZUVycm9yKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoYEVycm9yIHBhcnNpbmcgZmlsZSAke2ZpbGUubmFtZX06YCwgcGFyc2VFcnJvcik7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgY29uc29sZS5sb2coJ0RhdGEgcGFyc2VkIHN1Y2Nlc3NmdWxseScpO1xyXG5cclxuICAgIC8vIENvbmNhdGVuYXRlIGFsbCBvcmRlcnMgZnJvbSBkaWZmZXJlbnQgeWVhcnMgaW50byBhIHNpbmdsZSBhcnJheVxyXG4gICAgY29uc3QgYWxsT3JkZXJzID0gT2JqZWN0LnZhbHVlcyhvcmRlcnNCeVllYXIpLmZsYXQoKTtcclxuXHJcbiAgICAvLyBSZW1vdmUgZHVwbGljYXRlIHByb2R1Y3RzXHJcbiAgICBjb25zdCBwcm9kdWN0U2V0ID0gbmV3IFNldCgpO1xyXG4gICAgY29uc3QgY2xlYW5Qcm9kdWN0cyA9IHByb2R1Y3RzLmZpbHRlcihwcm9kdWN0ID0+IHtcclxuICAgICAgaWYgKHByb2R1Y3RTZXQuaGFzKHByb2R1Y3Qub2JqZWN0SUQpKSB7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlOyAvLyBTa2lwIGR1cGxpY2F0ZVxyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHByb2R1Y3RTZXQuYWRkKHByb2R1Y3Qub2JqZWN0SUQpO1xyXG4gICAgICAgIHJldHVybiB0cnVlOyAvLyBLZWVwIHVuaXF1ZVxyXG4gICAgICB9XHJcbiAgICB9KS5tYXAocHJvZHVjdCA9PiAoe1xyXG4gICAgICBvYmplY3RJRDogcHJvZHVjdC5vYmplY3RJRCB8fCAnVW5rbm93bicsXHJcbiAgICAgIG5hbWU6IHByb2R1Y3QubmFtZSB8fCAnVW5rbm93bicsXHJcbiAgICAgIGRlc2NyaXB0aW9uOiBwcm9kdWN0LmRlc2NyaXB0aW9uIHx8ICdObyBkZXNjcmlwdGlvbiBhdmFpbGFibGUnLFxyXG4gICAgICBicmFuZDogcHJvZHVjdC5icmFuZCB8fCAnVW5rbm93biBicmFuZCcsXHJcbiAgICAgIGNhdGVnb3JpZXM6IHByb2R1Y3QuY2F0ZWdvcmllcyB8fCBbXSxcclxuICAgICAgaGllcmFyY2hpY2FsQ2F0ZWdvcmllczoge1xyXG4gICAgICAgIGx2bDA6IHByb2R1Y3QuaGllcmFyY2hpY2FsQ2F0ZWdvcmllcz8ubHZsMCB8fCAnVW5rbm93bicsXHJcbiAgICAgICAgbHZsMTogcHJvZHVjdC5oaWVyYXJjaGljYWxDYXRlZ29yaWVzPy5sdmwxIHx8ICdVbmtub3duJyxcclxuICAgICAgICBsdmwyOiBwcm9kdWN0LmhpZXJhcmNoaWNhbENhdGVnb3JpZXM/Lmx2bDIgfHwgJ1Vua25vd24nLFxyXG4gICAgICAgIGx2bDM6IHByb2R1Y3QuaGllcmFyY2hpY2FsQ2F0ZWdvcmllcz8ubHZsMyB8fCAnVW5rbm93bicsXHJcbiAgICAgIH0sXHJcbiAgICAgIHR5cGU6IHByb2R1Y3QudHlwZSB8fCAnVW5rbm93biB0eXBlJyxcclxuICAgICAgcHJpY2U6IHByb2R1Y3QucHJpY2UgfHwgMCxcclxuICAgICAgcHJpY2VfcmFuZ2U6IHByb2R1Y3QucHJpY2VfcmFuZ2UgfHwgJ1Vua25vd24nLFxyXG4gICAgICBpbWFnZTogcHJvZHVjdC5pbWFnZSB8fCAnTm8gaW1hZ2UgYXZhaWxhYmxlJyxcclxuICAgICAgdXJsOiBwcm9kdWN0LnVybCB8fCAnTm8gVVJMIGF2YWlsYWJsZScsXHJcbiAgICAgIGZyZWVfc2hpcHBpbmc6IHByb2R1Y3QuZnJlZV9zaGlwcGluZyAhPT0gdW5kZWZpbmVkID8gcHJvZHVjdC5mcmVlX3NoaXBwaW5nIDogZmFsc2UsXHJcbiAgICAgIHBvcHVsYXJpdHk6IHByb2R1Y3QucG9wdWxhcml0eSB8fCAwLFxyXG4gICAgICByYXRpbmc6IHByb2R1Y3QucmF0aW5nIHx8IDAsXHJcbiAgICB9KSk7XHJcblxyXG4gICAgLy8gUmVtb3ZlIGR1cGxpY2F0ZSBvcmRlcnNcclxuICAgIGNvbnN0IG9yZGVyU2V0ID0gbmV3IFNldCgpO1xyXG4gICAgY29uc3QgY2xlYW5PcmRlcnMgPSBhbGxPcmRlcnMuZmlsdGVyKG9yZGVyID0+IHtcclxuICAgICAgaWYgKG9yZGVyU2V0LmhhcyhvcmRlci5vcmRlcl9pZCkpIHtcclxuICAgICAgICByZXR1cm4gZmFsc2U7IC8vIFNraXAgZHVwbGljYXRlXHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgb3JkZXJTZXQuYWRkKG9yZGVyLm9yZGVyX2lkKTtcclxuICAgICAgICByZXR1cm4gdHJ1ZTsgLy8gS2VlcCB1bmlxdWVcclxuICAgICAgfVxyXG4gICAgfSkubWFwKG9yZGVyID0+ICh7XHJcbiAgICAgIC4uLm9yZGVyLFxyXG4gICAgICBxdWFudGl0eTogb3JkZXIucXVhbnRpdHkgfHwgMSxcclxuICAgICAgcHJpY2VfTVJQOiBvcmRlci5wcmljZV9NUlAgfHwgMCxcclxuICAgICAgcGF5bWVudDogb3JkZXIucGF5bWVudCB8fCAwLFxyXG4gICAgICByYXRpbmc6IG9yZGVyLnJhdGluZyB8fCAwLFxyXG4gICAgfSkpO1xyXG5cclxuICAgIGNvbnNvbGUubG9nKCdXcml0aW5nIGNsZWFuZWQgZGF0YSB0byBmaWxlcycpO1xyXG4gICAgZnMud3JpdGVGaWxlU3luYyhwYXRoLmpvaW4ocHJvY2Vzcy5jd2QoKSwgJ3B1YmxpYycsICdsb2NhbC1kYXRhJywgJ3Byb2R1Y3RzLmpzb24nKSwgSlNPTi5zdHJpbmdpZnkoY2xlYW5Qcm9kdWN0cykpO1xyXG4gICAgZnMud3JpdGVGaWxlU3luYyhwYXRoLmpvaW4ocHJvY2Vzcy5jd2QoKSwgJ3B1YmxpYycsICdsb2NhbC1kYXRhJywgJ29yZGVycy5qc29uJyksIEpTT04uc3RyaW5naWZ5KGNsZWFuT3JkZXJzKSk7XHJcblxyXG4gICAgY29uc29sZS5sb2coJ0ZpbGVzIHdyaXR0ZW4gc3VjY2Vzc2Z1bGx5Jyk7XHJcblxyXG4gICAgLy8gTG9nIGEgc3VtbWFyeSBvZiBvcmRlcnMgZ3JvdXBlZCBieSB5ZWFyXHJcbiAgICBmb3IgKGNvbnN0IHllYXIgb2YgT2JqZWN0LmtleXMob3JkZXJzQnlZZWFyKSkge1xyXG4gICAgICBjb25zb2xlLmxvZyhgRmlsZSBvcmRlcnMvJHt5ZWFyfS8qIGRvd25sb2FkZWRgKTtcclxuICAgIH1cclxuXHJcbiAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7IG1lc3NhZ2U6ICdFVEwgYW5kIGRhdGEgY29tcGlsYXRpb24gcHJvY2VzcyBjb21wbGV0ZWQgc3VjY2Vzc2Z1bGx5JyB9KTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignRXJyb3IgZHVyaW5nIEVUTCBhbmQgZGF0YSBjb21waWxhdGlvbiBwcm9jZXNzOicsIGVycm9yKTtcclxuICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6IGVycm9yLm1lc3NhZ2UgfSk7XHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6WyJTdG9yYWdlIiwicGFyc2UiLCJmcyIsInBhdGgiLCJjb25maWciLCJoYW5kbGVyIiwicmVxIiwicmVzIiwiY29uc29sZSIsImxvZyIsInN0b3JhZ2UiLCJrZXlGaWxlbmFtZSIsIkdPT0dMRV9BUFBMSUNBVElPTl9DUkVERU5USUFMUyIsImJ1Y2tldCIsIkJVQ0tFVF9OQU1FIiwicHJvZHVjdHMiLCJvcmRlcnNCeVllYXIiLCJmaWxlcyIsImdldEZpbGVzIiwibWFwIiwiZmlsZSIsIm5hbWUiLCJkYXRhIiwiZG93bmxvYWQiLCJpbmNsdWRlcyIsInByb2R1Y3REYXRhIiwiSlNPTiIsInRvU3RyaW5nIiwicHVzaCIsInllYXJNYXRjaCIsIm1hdGNoIiwieWVhciIsInBhcnNlZERhdGEiLCJjb2x1bW5zIiwic2tpcF9lbXB0eV9saW5lcyIsImRlbGltaXRlciIsInJlY29yZCIsImluZGV4Iiwib3JkZXJfaWQiLCJjdXN0b21lcl9pZCIsInF1YW50aXR5IiwicGFyc2VJbnQiLCJyZXBsYWNlIiwicHJpY2VfTVJQIiwicGFyc2VGbG9hdCIsInBheW1lbnQiLCJ0aW1lc3RhbXAiLCJyYXRpbmciLCJwcm9kdWN0X2NhdGVnb3J5IiwicHJvZHVjdF9pZCIsInBheW1lbnRfdHlwZSIsIm9yZGVyX3N0YXR1cyIsInByb2R1Y3Rfd2VpZ2h0X2ciLCJwcm9kdWN0X2xlbmd0aF9jbSIsInByb2R1Y3RfaGVpZ2h0X2NtIiwicHJvZHVjdF93aWR0aF9jbSIsImN1c3RvbWVyX2NpdHkiLCJjdXN0b21lcl9zdGF0ZSIsInNlbGxlcl9pZCIsInNlbGxlcl9jaXR5Iiwic2VsbGVyX3N0YXRlIiwicGF5bWVudF9pbnN0YWxsbWVudHMiLCJwYXJzZUVycm9yIiwiZXJyb3IiLCJhbGxPcmRlcnMiLCJPYmplY3QiLCJ2YWx1ZXMiLCJmbGF0IiwicHJvZHVjdFNldCIsIlNldCIsImNsZWFuUHJvZHVjdHMiLCJmaWx0ZXIiLCJwcm9kdWN0IiwiaGFzIiwib2JqZWN0SUQiLCJhZGQiLCJkZXNjcmlwdGlvbiIsImJyYW5kIiwiY2F0ZWdvcmllcyIsImhpZXJhcmNoaWNhbENhdGVnb3JpZXMiLCJsdmwwIiwibHZsMSIsImx2bDIiLCJsdmwzIiwidHlwZSIsInByaWNlIiwicHJpY2VfcmFuZ2UiLCJpbWFnZSIsInVybCIsImZyZWVfc2hpcHBpbmciLCJ1bmRlZmluZWQiLCJwb3B1bGFyaXR5Iiwib3JkZXJTZXQiLCJjbGVhbk9yZGVycyIsIm9yZGVyIiwid3JpdGVGaWxlU3luYyIsImpvaW4iLCJwcm9jZXNzIiwiY3dkIiwic3RyaW5naWZ5Iiwia2V5cyIsInN0YXR1cyIsImpzb24iLCJtZXNzYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./pages/api/etl.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/etl.js"));
module.exports = __webpack_exports__;

})();